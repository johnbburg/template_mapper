<?php

/**
 * @file
 * Contains template_mapper.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function template_mapper_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the template_mapper module.
    case 'help.page.template_mapper':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Maps existing theme hook suggestions to your template files') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function template_mapper_theme() {
  $theme = [];

  return $theme;
}


/**
 * Implements hook_theme_suggestions_node().
 */
/**
 * Implements hook_theme_suggestions_HOOK().
 */
function template_mapper_theme_suggestions_node(array $variables)
{

  //debug($variables['elements']['#view_mode']);
  //debug(array_keys($variables['elements']));

//  $suggestion = 'node--' . $variables['elements']['#view_mode'];
  //return array($suggestion);


}


/**
 * Implements hook_theme_suggestions_alter().
 */
function template_mapper_theme_suggestions_alter(array &$suggestions, array
$variables, $hook) {

  if ($hook === 'node') {


   $thing =  \Drupal\template_mapper\Entity\TemplateMapper::load($hook);

    $replacements = $thing->getMappingsArray();

    debug($suggestions);

      $new_suggestions = array();
      foreach ($suggestions as $suggestion) {

        if (array_key_exists($suggestion, $replacements)) {
          $new_suggestions[] = $replacements[$suggestion];
        }
        else {
          $new_suggestions[] = $suggestion;
        }

      }
      $suggestions = $new_suggestions;
      debug($suggestions);
  }
}
